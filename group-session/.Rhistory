knitr::opts_chunk$set(echo = TRUE)
# require(ggplot2)
# require(dplyr)
# require(gapminder)
gapminder = read.csv("/Users/andyhong/Documents/7-Teaching/Urban Big Data Analytics/02-Assignments/assignment-4/gapminder_data_2016.csv")
geo = read.csv("/Users/andyhong/Documents/7-Teaching/Urban Big Data Analytics/02-Assignments/assignment-4/gapminder_geo.csv")
install.packages("plotly")
install.packages("dplyr")
install.packages("magrittr")
install.packages("ggplot2")
install.packages("plotly")
install.packages("leaflet")
knitr::opts_chunk$set(echo = TRUE)
gapminder = read.csv("/Users/andyhong/Documents/7-Teaching/Urban Big Data Analytics/03-GroupSessions/08-group-data_visualization/gapminder_data_2016.csv")
geo = read.csv("/Users/andyhong/Documents/7-Teaching/Urban Big Data Analytics/03-GroupSessions/08-group-data_visualization/gapminder_geo.csv")
head(gapminder)
df = gapminder %>% filter(name %in% c("China","United States"))
library(magrittr)
library(dplyr)
# Load packages
library(leaflet)
library(dplyr)
library(magrittr)
library(ggplot2)
library(plotly)
df = gapminder %>% filter(name %in% c("China","United States"))
df
df = gapminder %>% filter(name == "China" | name == "United States"))
df = gapminder %>% filter(name == "China" | name == "United States")
df
df = gapminder %>% filter(name == "China" | name == "United States" | name == "Canada" | name == "Kenya")
df
df = gapminder %>% filter(name == "China" | name == "India" | name == "Canada" | name == "Kenya")
df
df = gapminder %>% filter(name == "China" | name == "New Zealand" | name == "Canada" | name == "Kenya")
df
df = gapminder %>% filter(name == "China" | name == "Brazil" | name == "Canada" | name == "Kenya")
df
df = gapminder %>% filter(name == "China" | name == "France" | name == "Canada" | name == "Kenya")
df
df = gapminder %>% filter(name == "China" | name == "Spain" | name == "Canada" | name == "Kenya")
df
df = gapminder %>% filter(name == "China" | name == "Spain" | name == "Canada" | name == "Kenya" | name == "Brazil")
df
df = gapminder %>% filter(name == "China" | name == "Spain" | name == "Canada" | name == "Kenya" | name == "Brazil")
df
ggplot(gapminder, aes(x = region, y = income)) +
geom_boxplot(outlier.colour = "hotpink")
ggplot(gapminder, aes(x = income, y = lifeExp)) +
geom_point(aes(color = region)) +
geom_smooth() +
facet_grid(.~region) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Scatter plot
ggplot(gapminder, aes(x = lifeExp, y = income)) +
geom_point(aes(color = region)) +
geom_smooth() +
facet_grid(.~region) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
head(gapminder)
gapminder = gapminder %>%
mutate(variable = lifeExp, label = paste(name, "- Life Exp: ", variable, "k"))
head(gapminder)
gapminder = gapminder %>%
mutate(variable = lifeExp, label = paste(name, "- Life Exp: ", variable, "years"))
head(gapminder)
leaflet(gapminder) %>% addTiles() %>% addCircleMarkers(~long, ~lat, radius=~sqrt(variable), label=~label, weight=2)
g = leaflet(gapminder) %>%
addTiles() %>%
addCircleMarkers(~long, ~lat, radius=~sqrt(variable), label=~label, weight=2, color=~pal(region))
# Join gapminder data and the geographic coordinates
gapminder = gapminder %>% inner_join(geo, by="name")
# Check the joined data
head(gapminder)
g = leaflet(gapminder) %>%
addTiles() %>%
addCircleMarkers(~long, ~lat, radius=~sqrt(variable), label=~label, weight=2, color=~pal(region))
pal = colorFactor(rainbow(4), gapminder$region)
g = leaflet(gapminder) %>%
addTiles() %>%
addCircleMarkers(~long, ~lat, radius=~sqrt(variable), label=~label, weight=2, color=~pal(region))
g
grid.arrange(p1, p2, g, nrow = 1)
library(gridExtra)
grid.arrange(p1, p2, g, nrow = 1)
# Box plot
p1 = ggplot(gapminder, aes(x = region, y = lifeExp)) +
geom_boxplot(outlier.colour = "hotpink") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = 1/4)
# Scatter plot
p2 = ggplot(gapminder, aes(x = income, y = lifeExp)) +
geom_point(aes(color = region)) +
geom_smooth() +
facet_grid(.~region) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(p1, p2, g, nrow = 1)
install.packages("mapview")
library(mapview)
latticeView(g)
leafsync::latticeView(g)
install.packages("leafsync")
library(leafsync)
leafsync::latticeView(g)
leafsync::latticeView(p1, g)
ggplot() +
geom_polygon(data=gapminder, aes(x=long, y=lat, group=country), fill="grey40",
colour="grey90", alpha=1)
gapminder
ggplot() +
geom_polygon(data=gapminder, aes(x=long, y=lat, group=name), fill="grey40",
colour="grey90", alpha=1)
ggplot() +
geom_polygon(data=gapminder, aes(x=long, y=lat), fill="grey40",
colour="grey90", alpha=1)
ggplot() +
geom_polygon(data=gapminder, aes(x=long, y=lat),
colour="grey90", alpha=1)
p1 = ggplot(gapminder, aes(x = region, y = lifeExp)) +
geom_boxplot(outlier.colour = "hotpink") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = 1/4) +
ggtitle("(a) Life Expectancy by Region")
# Scatter plot
p2 = ggplot(gapminder, aes(x = income, y = lifeExp)) +
geom_point(aes(color = region)) +
geom_smooth() +
facet_grid(.~region) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("(b) Relationship between income and life expectancy")
grid.arrange(p1, p2, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
gapminder = read.csv("/Users/andyhong/Documents/7-Teaching/Urban Big Data Analytics/03-GroupSessions/08-group-data_visualization/gapminder_data_2016.csv")
geo = read.csv("/Users/andyhong/Documents/7-Teaching/Urban Big Data Analytics/03-GroupSessions/08-group-data_visualization/gapminder_geo.csv")
# Set CRAN repository source
options(repos="https://cran.rstudio.com")
# Install packages
install.packages("leaflet")
install.packages("dplyr")
install.packages("magrittr")
install.packages("ggplot2")
install.packages("plotly")
# Load packages
library(leaflet)
library(dplyr)
library(magrittr)
library(ggplot2)
library(plotly)
head(gapminder)
head(geo)
str(gapminder)
str(geo)
summary(gapminder)
# Join gapminder data and the geographic coordinates
gapminder = gapminder %>% inner_join(geo, by="name")
# Check the joined data
head(gapminder)
ggplot(gapminder, aes(x = region, y = lifeExp)) +
geom_boxplot()
ggplot(gapminder, aes(x = region, y = lifeExp)) +
geom_boxplot(outlier.colour = "hotpink") +
geom_jitter()
ggplot(gapminder, aes(x = region, y = lifeExp)) +
geom_boxplot(outlier.colour = "hotpink") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = 1/4)
ggplot(gapminder, aes(x = income, y = lifeExp)) +
geom_point()
ggplot(gapminder, aes(x = income, y = lifeExp)) +
geom_point() +
geom_smooth()
ggplot(gapminder, aes(x = income, y = lifeExp)) +
geom_point(aes(color = region)) +
geom_smooth()
ggplot(gapminder, aes(x = income, y = lifeExp)) +
geom_point(aes(color = region)) +
geom_smooth(aes(color = region))
ggplot(gapminder, aes(x = income, y = lifeExp)) +
geom_point(aes(color = region)) +
geom_smooth() +
facet_grid(.~region)
ggplot(gapminder, aes(x = income, y = lifeExp)) +
geom_point(aes(color = region)) +
geom_smooth() +
facet_grid(.~region) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p = ggplot(gapminder, aes(x = income, y = lifeExp)) +
geom_point(aes(text = paste("Country:", name), color = region)) +
geom_smooth() +
facet_grid(.~region) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p)
leaflet(gapminder) %>% addTiles()
# leaflet(gapminder) %>% addProviderTiles(provider = "Stamen.TonerLite")
# leaflet(gapminder) %>% addProviderTiles(provider = "Stamen.Toner")
# leaflet(gapminder) %>% addProviderTiles(provider = "Esri.WorldImagery")
head(gapminder)
leaflet(gapminder) %>% addTiles() %>% addCircleMarkers(~long, ~lat)
leaflet(gapminder) %>% addTiles() %>% addCircleMarkers(~long, ~lat, radius=~income)
gapminder %>% summarise(min=min(income), max=max(income))
leaflet(gapminder) %>% addTiles() %>% addCircleMarkers(~long, ~lat, radius=~sqrt(income/1000))
leaflet(gapminder) %>% addTiles() %>% addCircleMarkers(~long, ~lat, radius=~sqrt(income/1000), label=~name)
gapminder = gapminder %>%
mutate(variable = income/1000, label = paste(name, "- Income: ", variable, "k"))
leaflet(gapminder) %>% addTiles() %>% addCircleMarkers(~long, ~lat, radius=~sqrt(variable), label=~label, weight=2)
pal = colorFactor(rainbow(4), gapminder$region)
g = leaflet(gapminder) %>%
addTiles() %>%
addCircleMarkers(~long, ~lat, radius=~sqrt(variable), label=~label, weight=2, color=~pal(region))
install.packages("gridExtra")
library(gridExtra)
# Box plot
p1 = ggplot(gapminder, aes(x = region, y = lifeExp)) +
geom_boxplot(outlier.colour = "hotpink") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = 1/4)
# Scatter plot
p2 = ggplot(gapminder, aes(x = income, y = lifeExp)) +
geom_point(aes(color = region)) +
geom_smooth() +
facet_grid(.~region) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(p1, p2, nrow = 1)
install.packages("leaflet")
install.packages("dplyr")
install.packages("plotly")
install.packages("magrittr")
install.packages("ggplot2")
install.packages("gridExtra")
install.packages("dplyr")
install.packages("plotly")
install.packages("magrittr")
install.packages("ggplot2")
install.packages("plotly")
install.packages("magrittr")
install.packages("ggplot2")
install.packages("magrittr")
install.packages("ggplot2")
install.packages("ggplot2")
grid.arrange(p1, p2, ncol = 1)
gapminder
ggplot(gapminder, aes(x = population, y = lifeExp)) +
geom_point(aes(text = paste("Country:", name), color = region)) +
geom_smooth() +
facet_grid(.~region) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
